version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_DB: myapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastapi_backend
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:password@postgres:5432/myapp
      CORS_ORIGINS: "http://localhost:5173,http://127.0.0.1:5173,http://frontend:5173,http://vue_frontend:5173"
      SECRET_KEY: ${SECRET_KEY:-your-super-secret-key-change-in-production}
      ENVIRONMENT: production
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app
      - ./backend/tests:/app/tests
      - ./backend/.env:/app/.env
    depends_on:
      - postgres
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: uv run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=http://backend:8000
        - VITE_ENVIRONMENT=docker
    container_name: vue_frontend
    environment:
      - VITE_API_BASE_URL=http://backend:8000
      - VITE_BACKEND_URL=http://backend:8000
      - VITE_ENVIRONMENT=docker
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: npm run dev -- --host 0.0.0.0

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
