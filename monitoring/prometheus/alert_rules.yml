# Prometheus Alert Rules for Enterprise Ticket Management System
# Defines alerts for performance, availability, and business metrics

groups:
  - name: enterprise_ticket_system_alerts
    rules:
      # High-level system alerts
      - alert: HighCPUUsage
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is above 80% for more than 5 minutes on {{ $labels.instance }}"

      - alert: HighMemoryUsage
        expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 85
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is above 85% for more than 5 minutes on {{ $labels.instance }}"

      - alert: DiskSpaceLow
        expr: (node_filesystem_avail_bytes / node_filesystem_size_bytes) * 100 < 20
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "Disk space is running low"
          description: "Disk space is below 20% on {{ $labels.instance }} mount {{ $labels.mountpoint }}"

  - name: fastapi_backend_alerts
    rules:
      # FastAPI application alerts
      - alert: FastAPIHighResponseTime
        expr: histogram_quantile(0.95, rate(fastapi_request_duration_seconds_bucket[5m])) > 2
        for: 3m
        labels:
          severity: warning
        annotations:
          summary: "FastAPI high response time"
          description: "95th percentile response time is above 2 seconds for {{ $labels.method }} {{ $labels.path }}"

      - alert: FastAPIHighErrorRate
        expr: rate(fastapi_requests_total{status=~"5.."}[5m]) / rate(fastapi_requests_total[5m]) > 0.05
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "FastAPI high error rate"
          description: "Error rate is above 5% for the last 5 minutes"

      - alert: FastAPIDown
        expr: up{job="fastapi-backend"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "FastAPI backend is down"
          description: "FastAPI backend has been down for more than 1 minute"

      - alert: FastAPILowThroughput
        expr: rate(fastapi_requests_total[5m]) < 50
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "FastAPI low throughput"
          description: "Request rate is below 50 requests/second for 10 minutes"

  - name: database_alerts
    rules:
      # PostgreSQL database alerts
      - alert: PostgreSQLDown
        expr: up{job="postgresql"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "PostgreSQL is down"
          description: "PostgreSQL database has been down for more than 1 minute"

      - alert: PostgreSQLHighConnections
        expr: pg_stat_database_numbackends / pg_settings_max_connections * 100 > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "PostgreSQL high connection usage"
          description: "PostgreSQL connection usage is above 80%"

      - alert: PostgreSQLSlowQueries
        expr: pg_stat_activity_max_tx_duration > 300
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "PostgreSQL slow queries detected"
          description: "Slow queries detected, max transaction duration is {{ $value }} seconds"

      - alert: PostgreSQLHighDiskUsage
        expr: pg_database_size_bytes / (1024^3) > 10
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "PostgreSQL database size is large"
          description: "Database size is above 10GB: {{ $value }}GB"

  - name: business_logic_alerts
    rules:
      # Business-specific alerts for ticket system
      - alert: HighTicketCreationRate
        expr: increase(fastapi_requests_total{method="POST", path="/tickets/"}[1h]) > 1000
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Unusually high ticket creation rate"
          description: "More than 1000 tickets created in the last hour"

      - alert: ApprovalBacklog
        expr: increase(fastapi_requests_total{path="/approvals/pending"}[5m]) > 100
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "High approval queue backlog"
          description: "Approval queue is experiencing high load"

      - alert: FailedFileUploads
        expr: rate(fastapi_requests_total{method="POST", path=~"/attachments/.*", status=~"4..|5.."}[5m]) > 0.1
        for: 3m
        labels:
          severity: warning
        annotations:
          summary: "High file upload failure rate"
          description: "File upload failure rate is above 10%"

  - name: security_alerts
    rules:
      # Security-related alerts
      - alert: HighAuthenticationFailures
        expr: rate(fastapi_requests_total{path="/auth/login", status="401"}[5m]) > 10
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "High authentication failure rate"
          description: "More than 10 authentication failures per second"

      - alert: SuspiciousAPIActivity
        expr: rate(fastapi_requests_total{status=~"4.."}[1m]) > 50
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "Suspicious API activity detected"
          description: "High rate of 4xx errors may indicate scanning or abuse"

  - name: infrastructure_alerts
    rules:
      # Infrastructure component alerts
      - alert: RedisDown
        expr: up{job="redis"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Redis cache is down"
          description: "Redis cache has been down for more than 1 minute"

      - alert: HAProxyDown
        expr: up{job="haproxy"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "HAProxy load balancer is down"
          description: "HAProxy load balancer has been down for more than 1 minute"

      - alert: NginxDown
        expr: up{job="nginx"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Nginx web server is down"
          description: "Nginx web server has been down for more than 1 minute"